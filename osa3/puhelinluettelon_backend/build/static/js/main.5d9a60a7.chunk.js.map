{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Person","_ref","person","deletePerson","react_default","a","createElement","name","number","onClick","Persons","persons","listFilter","filter","toUpperCase","indexOf","map","components_Person","key","id","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","handleListFilterChange","baseURL","services_persons","axios","get","then","response","data","newObject","post","delete","concat","put","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setListFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","notificationType","setNotificationType","useEffect","personService","App_Notification","components_Filter","event","target","components_PersonForm","preventDefault","existingIndex","findIndex","setTimeout","window","confirm","catch","error","console","log","components_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5d9a60a7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} <button onClick={deletePerson}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, listFilter, deletePerson}) => {\r\n    return (\r\n        <div>\r\n        {persons.filter(person => person.name.toUpperCase().indexOf(listFilter.toUpperCase())>=0).map(person => \r\n            <Person key={person.id} person={person} deletePerson={() => deletePerson(person.id, person.name)}/>\r\n        )}\r\n        </div>\r\n    )\r\n\r\n}\r\n \r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form> \r\n   )\r\n}\r\n \r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({listFilter, handleListFilterChange}) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={listFilter} onChange={handleListFilterChange}/>\r\n        </div> \r\n   )\r\n} \r\n\r\nexport default Filter\r\n    ","import axios from 'axios'\r\n//const baseURL = 'http://localhost:3001/api/persons'\r\n//const baseURL = 'https://phe-fullstack-puhelinluettelo.herokuapp.com/api/persons'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n \r\nconst deleteId = id => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    deleteId,\r\n    update\r\n}","import React, { useState , useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    \r\n    if (type === 'notification'){\r\n        return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )}\r\n    else if (type === 'error'){\r\n        return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )}\r\n\r\n  }\r\n\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons] = useState([]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ listFilter, setListFilter ] = useState('')\r\n    const [notificationMessage, setNotificationMessage] = useState(null)\r\n    const [notificationType, setNotificationType] = useState('notification')\r\n\r\n\r\n    const hook = () => {\r\n        //console.log('effect')\r\n        personService\r\n          .getAll()\r\n          .then(response => {\r\n            //console.log('promise fulfilled')\r\n            setPersons(response)\r\n        })\r\n    }\r\n      \r\n    useEffect(hook, [])\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault()\r\n        const existingIndex = persons.findIndex(person => person.name === newName)\r\n\r\n        if (existingIndex < 0){\r\n            const nameObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            \r\n            personService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    setNotificationType('notification')\r\n                    setNotificationMessage(`Added ${response.name}`)\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null)\r\n                      }, 3000)\r\n                    setPersons(persons.concat(response))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                }) \r\n        }\r\n        else {\r\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n                const id = persons[existingIndex].id\r\n                const nameObject = {\r\n                    name: newName,\r\n                    number: newNumber\r\n                }\r\n                personService\r\n                    .update(id, nameObject)\r\n                    .then(response => {\r\n                        setNotificationType('notification')\r\n                        setNotificationMessage(`Updated ${response.name} to ${response.number}`)\r\n                        setTimeout(() => {\r\n                            setNotificationMessage(null)\r\n                        }, 3000)\r\n                        setPersons(persons.map(person => person.id !== id ? person : response))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                    })\r\n                    .catch(error => {\r\n                        setNotificationType('error')\r\n                        setNotificationMessage(`Information of ${newName} has already been removed from server`)\r\n                        setTimeout(() => {\r\n                            setNotificationMessage(null)\r\n                          }, 3000)\r\n                        setPersons(persons.filter(person => person.id !== id))\r\n                      })\r\n            } \r\n            else {\r\n                console.log('Update canceled...')\r\n            }\r\n        }\r\n    }\r\n\r\n    const deletePersonId = (id, name) => {\r\n        if (window.confirm(`Delete ${name} ?`)){\r\n            personService\r\n                .deleteId(id)\r\n                .then(response => {\r\n                    setNotificationType('notification')\r\n                    setNotificationMessage(`Deleted ${name}`)\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null)\r\n                      }, 3000)\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n                .catch(error => {\r\n                    setNotificationType('error')\r\n                    setNotificationMessage(`Information of ${newName} has already been removed from server`)\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null)\r\n                      }, 3000)\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                  })\r\n        }\r\n        else {\r\n            console.log('Delete canceled...')\r\n        }\r\n    }\r\n    \r\n    const handleNameChange = (event) => {\r\n        //console.log(event.target.value)\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        //console.log(event.target.value)\r\n        setNewNumber(event.target.value)\r\n    }\r\n    const handleListFilterChange = (event) => {\r\n        //console.log(event.target.value)\r\n        setListFilter(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMessage} type={notificationType} />\r\n\r\n            <Filter \r\n                listFilter={listFilter}\r\n                handleListFilterChange={handleListFilterChange} \r\n            /> \r\n\r\n            <h2>add a new</h2>\r\n            <PersonForm \r\n                addName={addName}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n\r\n            <h2>Numbers</h2>\r\n            <Persons \r\n                persons={persons} \r\n                listFilter={listFilter}\r\n                deletePerson={deletePersonId} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n "],"sourceRoot":""}